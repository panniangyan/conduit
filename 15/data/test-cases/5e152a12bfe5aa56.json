{
  "uid" : "5e152a12bfe5aa56",
  "name" : "test__add_new_article",
  "fullName" : "test.test_conduit_remek_panniangyan.TestConduit#test__add_new_article",
  "historyId" : "82fc0806949363292f62c8d0c619f224",
  "time" : {
    "start" : 1628256056269,
    "stop" : 1628256072034,
    "duration" : 15765
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'http://local.../articles/new' == 'http://local.../articles/New'\n  - http://localhost:1667/#/articles/New\n  ?                                  ^\n  + http://localhost:1667/#/articles/new\n  ?                                  ^",
  "statusTrace" : "self = <test_conduit_remek_panniangyan.TestConduit object at 0x7f68236f38b0>\n\n        def test__add_new_article(self):\n            input_post = [\"New\", \"me\", \"blabablabal\", \"key\"]\n            article_data = [\"Article Title\", \"What's this article about?\", \"Write your article (in markdown)\", \"Enter tags\"]\n            accept_cookies(self.browser)\n            conduit_login(self.browser)\n            xpath(self.browser, '//*[@href=\"#/editor\"]').click()\n            time.sleep(2)\n            fill_article = []\n            i = 0\n            while i < len(input_post):\n                fill = xpath(self.browser, f'//*[@placeholder=\"{article_data[i]}\"]').send_keys(input_post[i])\n                fill_article.append(fill)\n                i = i + 1\n                time.sleep(1)\n            time.sleep(2)\n            WebDriverWait(self.browser, 5).until(\n                EC.visibility_of_element_located((By.XPATH, '//button[1]'))).click()\n            time.sleep(2)\n            # assert\n            published_title = xpath(self.browser, '//*[@class=\"container\"]/h1')\n            publish_date = self.browser.find_element_by_class_name(\"date\")\n    #        assert (published_title.text == input_post[0])\n>           assert (self.browser.current_url == f'http://localhost:1667/#/articles/{input_post[0]}')\nE           AssertionError: assert 'http://local.../articles/new' == 'http://local.../articles/New'\nE             - http://localhost:1667/#/articles/New\nE             ?                                  ^\nE             + http://localhost:1667/#/articles/new\nE             ?                                  ^\n\ntest/test_conduit_remek_panniangyan.py:191: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'http://local.../articles/new' == 'http://local.../articles/New'\n  - http://localhost:1667/#/articles/New\n  ?                                  ^\n  + http://localhost:1667/#/articles/new\n  ?                                  ^",
    "statusTrace" : "self = <test_conduit_remek_panniangyan.TestConduit object at 0x7f68236f38b0>\n\n        def test__add_new_article(self):\n            input_post = [\"New\", \"me\", \"blabablabal\", \"key\"]\n            article_data = [\"Article Title\", \"What's this article about?\", \"Write your article (in markdown)\", \"Enter tags\"]\n            accept_cookies(self.browser)\n            conduit_login(self.browser)\n            xpath(self.browser, '//*[@href=\"#/editor\"]').click()\n            time.sleep(2)\n            fill_article = []\n            i = 0\n            while i < len(input_post):\n                fill = xpath(self.browser, f'//*[@placeholder=\"{article_data[i]}\"]').send_keys(input_post[i])\n                fill_article.append(fill)\n                i = i + 1\n                time.sleep(1)\n            time.sleep(2)\n            WebDriverWait(self.browser, 5).until(\n                EC.visibility_of_element_located((By.XPATH, '//button[1]'))).click()\n            time.sleep(2)\n            # assert\n            published_title = xpath(self.browser, '//*[@class=\"container\"]/h1')\n            publish_date = self.browser.find_element_by_class_name(\"date\")\n    #        assert (published_title.text == input_post[0])\n>           assert (self.browser.current_url == f'http://localhost:1667/#/articles/{input_post[0]}')\nE           AssertionError: assert 'http://local.../articles/new' == 'http://local.../articles/New'\nE             - http://localhost:1667/#/articles/New\nE             ?                                  ^\nE             + http://localhost:1667/#/articles/new\nE             ?                                  ^\n\ntest/test_conduit_remek_panniangyan.py:191: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "83508716fd9787b8",
      "name" : "log",
      "source" : "83508716fd9787b8.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "79988e675abaf9eb",
      "name" : "stderr",
      "source" : "79988e675abaf9eb.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_conduit_remek_panniangyan"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit"
  }, {
    "name" : "host",
    "value" : "fv-az74-184"
  }, {
    "name" : "thread",
    "value" : "3727-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_conduit_remek_panniangyan"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5e152a12bfe5aa56.json",
  "parameterValues" : [ ]
}