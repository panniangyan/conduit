{
  "uid" : "5c3ff07f2517297",
  "name" : "test__registration",
  "fullName" : "test.test_conduit_remek_panniangyan.TestConduit#test__registration",
  "historyId" : "5d3fd4b6073314ab19b8241ba12d2f30",
  "time" : {
    "start" : 1628255415318,
    "stop" : 1628255423468,
    "duration" : 8150
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Welcome!' == 'Registration failed!'\n  - Registration failed!\n  + Welcome!",
  "statusTrace" : "self = <test_conduit_remek_panniangyan.TestConduit object at 0x7f2456891610>\n\n    def test__registration(self):\n        user_input = {\"Username\": \"test\",\n                      \"Email\": \"user5@hotmail.com\",\n                      \"Password\": \"Userpass1\"\n                      }\n        accept_cookies(self.browser)\n        xpath(self.browser, '//*[@href=\"#/register\"]').click()\n        time.sleep(2)\n        for k, v in user_input.items():\n            xpath(self.browser, f'//*[@placeholder=\"{k}\"]').send_keys(v)\n        time.sleep(1)\n        xpath(self.browser, '//button[1]').click()\n        time.sleep(2)\n        # assert\n        ref_text_fail = \"Registration failed!\"\n        ref_text_success = \"Welcome!\"\n        welcome = WebDriverWait(self.browser, 5).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \".swal-title\"))\n        )\n        #assert (welcome.text == ref_text_success)\n>       assert (welcome.text == ref_text_fail)\nE       AssertionError: assert 'Welcome!' == 'Registration failed!'\nE         - Registration failed!\nE         + Welcome!\n\ntest/test_conduit_remek_panniangyan.py:112: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Welcome!' == 'Registration failed!'\n  - Registration failed!\n  + Welcome!",
    "statusTrace" : "self = <test_conduit_remek_panniangyan.TestConduit object at 0x7f2456891610>\n\n    def test__registration(self):\n        user_input = {\"Username\": \"test\",\n                      \"Email\": \"user5@hotmail.com\",\n                      \"Password\": \"Userpass1\"\n                      }\n        accept_cookies(self.browser)\n        xpath(self.browser, '//*[@href=\"#/register\"]').click()\n        time.sleep(2)\n        for k, v in user_input.items():\n            xpath(self.browser, f'//*[@placeholder=\"{k}\"]').send_keys(v)\n        time.sleep(1)\n        xpath(self.browser, '//button[1]').click()\n        time.sleep(2)\n        # assert\n        ref_text_fail = \"Registration failed!\"\n        ref_text_success = \"Welcome!\"\n        welcome = WebDriverWait(self.browser, 5).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \".swal-title\"))\n        )\n        #assert (welcome.text == ref_text_success)\n>       assert (welcome.text == ref_text_fail)\nE       AssertionError: assert 'Welcome!' == 'Registration failed!'\nE         - Registration failed!\nE         + Welcome!\n\ntest/test_conduit_remek_panniangyan.py:112: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "68be2664e18313a1",
      "name" : "log",
      "source" : "68be2664e18313a1.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "2f0c0e43f0d3a906",
      "name" : "stderr",
      "source" : "2f0c0e43f0d3a906.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_conduit_remek_panniangyan"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit"
  }, {
    "name" : "host",
    "value" : "fv-az74-184"
  }, {
    "name" : "thread",
    "value" : "3811-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_conduit_remek_panniangyan"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5c3ff07f2517297.json",
  "parameterValues" : [ ]
}